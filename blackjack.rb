require_relative 'objects/user'
require_relative 'objects/deck'

class BlackJack
  attr_reader :player, :dealer, :deck
  attr_accessor :bank

  def initialize(player_name)
    @player = User.new(player_name)
    @dealer = User.new('Дилер')
    @deck = Deck.new
    @bank = 0
  end

  # В класс добавить методы:
  #   - Начать игру. В нем в цыкле будут вызываться иные методы BlackJack, пока предполагаю:
  #       - Сброс игры. Перемешывание карт и сброс банка до нуля
  #       - Повышение банка на 20, снятие с баланса игроков по 10. То, на сколько снимать баланс с игроков и попалнять
  #         банк вынесу в config.rb как константу.
  #       - Раздача по две карты игрокам
  #       - Показ в терминале карт игрока и их суммы. Карты дилера в виде **
  #       - Ход игрока. Три варианта на выбор в соответствии с заданием.
  #         - Ход дилера (только если игрок не выбрал "Открыть карты" на предыдущем шаге).
  #           Добавляет карты пока сумма существующих менее 17 и карт на руке меньше 3.
  #       - Если у каждого по три карты или если игрок выбрал "Открыть карты" ранее:
  #            - Показ результатов и показ победителя. Распределение банка.
  #         иначе
  #           Возврат к ходу игрока
  #       - Вопрос к игроку хочет ли он продолжить.
  #         Да - переходим к началу цыкла если пользователь не дошел до death_balance. Предполагаю что дилер может уйти в любой минус.
  #         Нет - exit
  #
  #   - хз может еще что-то
end

if __FILE__ == $PROGRAM_NAME
  # Просим пользователя ввести имя
  # Создаем инстанс BlackJack и вызываем метод для старта игры
end
